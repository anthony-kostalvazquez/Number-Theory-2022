# Number-Theory-2022
Here is a repository of all my number theory codes I built during my research term summer 2022

--poly_mult.py--
Python code that multiplys polynomials using kroneker substitutuion and a brute force method and times the results

--Discrete_Log_Solver.py--
python code that solves the descrete logrythm problem using a brute force approach and the famous babystep giantstep algortythm

|-------------------------------sample output-------------------------------|
|                                                                           |
|   Brute Force Algorithm time:  320.0532867908478 Seconds                  |
|   And Got the Solution 175 ^ 72626 = 63368 (mod 77711 )                   |
|                                                                           |
|   Baby-Step Giant-Step Algorithm time:  0.0010008811950683594 Seconds     |
|   And Got the Solution 175 ^ 72626 = 63368 (mod 77711 )                   |
|                                                                           |
|-------------------------------sample output-------------------------------|


--Discrete_Log_Solver.c (PROJECT FOLDER)--
this is a folder that contains a main function and a library in c i made called anthlib.c 
these together solve the descrete logrythm problem with 

	i)   a brute force approach
	ii)  the famous babystep giantstep algortythm
	iii) the famous babystep giantstep algortythm utilizing openmp parallel code

Dependecies: OpenMP (https://www.openmp.org), Flint (https://www.flintlib.org), GMP (https://gmplib.org), MPFR (https://www.mpfr.org)
NOTE: that these are the same algorythms as in my other program Discrete_Log_Solver.py however its much faster in c

|-------------------------------sample output-------------------------------|
|                                                                           |
|   Brute Force Algorithm time: 0.008575   Seconds                          |
|   And Got the Solution 175 ^ 72626 = 63368 (mod 77711)                    |
|                                                                           |
|   Baby-Step Giant-Step Algorithm time:  0.000312 Seconds                  |
|   And Got the Solution 175 ^ 72626 = 63368 (mod 77711)                    |
|                                                                           |
|   Parallel Baby Step Giant Step Algorithm time: 0.000117 Seconds          |
|   And Got the Solution 175 ^ 72626 = 63368 (mod77711)  	            |
| 									    |
|-------------------------------sample output-------------------------------|
